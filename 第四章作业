/1.带构造函数
package e4_15;
class function {
	public int x;
	public function(int x) {this.x=x;}  //构造函数
	public int fibo(int x) {
		if(x==1) return 1;
		else if(x==2) return 1;
		else return(fibo(x-1)+fibo(x-2));
	}
	public void showFibo() {	System.out.println("f("+x+")="+fibo(x));}
}
public class E4_15 {
	public static void main(String[] args) {
		function fun=new function(8);
		fun.showFibo();
	}
}

运行结果：
f8=21






//2.无构造函数
package e4_15_2;
class function {
	public int x;	//无构造函数
	public int fibo(int x) {
		if(x==1) return 1;
		else if(x==2) return 1;
		else return(fibo(x-1)+fibo(x-2));
	}
	public void showFibo(int x) {	System.out.println("f("+x+")="+fibo(x));}
}
public class E4_15_2 {
	public static void main(String[] args) {
		function fun=new function();
		fun.showFibo(8);
	}
}

运行结果：
f8=21






//3.用静态方法实现
package e4_15_3;
class function {
	public int x;	//无构造函数
	public static int fibo(int x) {	//静态方法
		if(x==1) return 1;
		else if(x==2) return 1;
		else return(fibo(x-1)+fibo(x-2));
	}
	public void showFibo(int x) {	System.out.println("f("+x+")="+function.fibo(x));}	//调用静态方法
}
public class E4_15_3 {
	public static void main(String[] args) {
		function fun=new function();
		fun.showFibo(8);
	}
}

运行结果：
f8=21
